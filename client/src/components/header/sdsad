import React, { useState, useEffect } from 'react';
import { 
  FaBars, FaFacebookF, FaGoogle, FaPhoneAlt, FaLock, FaUser, 
  FaTimes, FaArrowLeft, FaHome, FaGift, FaMoneyBillAlt, FaTrophy, 
  FaTelegram, FaHeadset, FaEye, FaEyeSlash, FaTimesCircle 
} from 'react-icons/fa';
import logo from "../../assets/logo.png"
import { MdArrowDropDown } from 'react-icons/md';
import {
  FaFire,
  FaUserFriends,
  FaGift as FaGift2,
  FaChartBar,
  FaMedal,
  FaFutbol,
  FaMoneyBillWave,
  FaHandHoldingHeart,
  FaGem,
  FaCrosshairs,
  FaBullseye,
  FaHandsHelping,
  FaFlag,
  FaGamepad,
  FaDownload,
  FaThLarge,
  FaHeadset as FaHeadset2,
  FaSignOutAlt,
  FaUserCog,
  FaHistory,
  FaWallet,
  FaCog
} from 'react-icons/fa';
import { FaSyncAlt } from "react-icons/fa";
import { RiMenuFold2Line } from "react-icons/ri";
import axios from 'axios';
import toast, { Toaster } from 'react-hot-toast';

const API_BASE_URL = import.meta.env.VITE_API_KEY_Base_URL;

const Header = () => {
  const [language, setLanguage] = useState({
    code: 'bn',
    name: 'বাংলা',
    flag: 'https://images.5849492029.com//TCG_PROD_IMAGES/COUNTRY_FLAG/CIRCLE/BD.svg'
  });
  const [showDropdown, setShowDropdown] = useState(false);
  const [showAuthModal, setShowAuthModal] = useState(false);
  const [activeTab, setActiveTab] = useState('login');
  const [passwordVisible, setPasswordVisible] = useState(false);
  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [profileDropdownOpen, setProfileDropdownOpen] = useState(false);
  const [activeNav, setActiveNav] = useState('home');
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [userData, setUserData] = useState(null);
  const [formData, setFormData] = useState({
    username: '',
    password: '',
    confirmPassword: ''
  });
  const [errors, setErrors] = useState({
    username: '',
    password: '',
    confirmPassword: ''
  });

  const languages = [
    { code: 'bn', name: 'বাংলা', flag: 'https://images.5849492029.com//TCG_PROD_IMAGES/COUNTRY_FLAG/CIRCLE/BD.svg' },
    { code: 'en', name: 'English', flag: 'https://images.5849492029.com//TCG_PROD_IMAGES/COUNTRY_FLAG/CIRCLE/US.svg' }
  ];

  useEffect(() => {
    const token = localStorage.getItem('token');
    const storedUser = localStorage.getItem('user');
    
    if (token && storedUser) {
      setIsAuthenticated(true);
      setUserData(JSON.parse(storedUser));
    }
  }, []);

  const toggleDropdown = () => setShowDropdown(!showDropdown);
  const selectLanguage = (lang) => {
    setLanguage(lang);
    setShowDropdown(false);
  };

  const openAuthModal = (tab) => {
    setShowAuthModal(true);
    setActiveTab(tab);
    setFormData({ username: '', password: '', confirmPassword: '' });
    setErrors({ username: '', password: '', confirmPassword: '' });
  };

  const closeModal = () => {
    setShowAuthModal(false);
    setErrors({
      username: '',
      password: '',
      confirmPassword: ''
    });
  };

  const toggleSidebar = () => {
    setSidebarOpen(!sidebarOpen);
  };

  const closeSidebar = () => {
    setSidebarOpen(false);
  };

  const toggleProfileDropdown = () => {
    setProfileDropdownOpen(!profileDropdownOpen);
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value
    });
    
    if (errors[name]) {
      setErrors({
        ...errors,
        [name]: ''
      });
    }
  };

  const validateForm = () => {
    let valid = true;
    const newErrors = {
      username: '',
      password: '',
      confirmPassword: ''
    };

    if (!formData.username.trim()) {
      newErrors.username = 'ব্যবহারকারীর নাম প্রয়োজন';
      valid = false;
    } else if (formData.username.length < 4) {
      newErrors.username = 'ব্যবহারকারীর নাম কমপক্ষে ৪ অক্ষর হতে হবে';
      valid = false;
    }

    if (activeTab === 'login' || activeTab === 'register') {
      if (!formData.password) {
        newErrors.password = 'পাসওয়ার্ড প্রয়োজন';
        valid = false;
      } else if (formData.password.length < 6) {
        newErrors.password = 'পাসওয়ার্ড কমপক্ষে ৬ অক্ষর হতে হবে';
        valid = false;
      }
    }

    if (activeTab === 'register') {
      if (formData.password !== formData.confirmPassword) {
        newErrors.confirmPassword = 'পাসওয়ার্ড মিলছে না';
        valid = false;
      }
    }

    setErrors(newErrors);
    return valid;
  };

  const handleLogin = async () => {
    if (!validateForm()) return;

    try {
      const response = await axios.post(`${API_BASE_URL}/auth/login`, {
        username: formData.username,
        password: formData.password
      });

      const { token, user } = response.data;
      
      localStorage.setItem('token', token);
      localStorage.setItem('user', JSON.stringify(user));
      
      setIsAuthenticated(true);
      setUserData(user);
      closeModal();
      toast.success('সফলভাবে লগইন করা হয়েছে!');
    } catch (error) {
      toast.error(error.response?.data?.message || 'লগইন করতে সমস্যা হয়েছে');
    }
  };

  const handleRegister = async () => {
    if (!validateForm()) return;

    try {
      const response = await axios.post(`${API_BASE_URL}/auth/signup`, {
        username: formData.username,
        password: formData.password
      });

      const { token, user } = response.data;
      
      localStorage.setItem('token', token);
      localStorage.setItem('user', JSON.stringify(user));
      
      setIsAuthenticated(true);
      setUserData(user);
      closeModal();
      toast.success('সফলভাবে নিবন্ধন করা হয়েছে!');
    } catch (error) {
      toast.error(error.response?.data?.message || 'নিবন্ধন করতে সমস্যা হয়েছে');
    }
  };

  const handleOneClickRegister = async () => {
    if (!formData.username.trim()) {
      setErrors({
        username: 'ব্যবহারকারীর নাম প্রয়োজন',
        password: '',
        confirmPassword: ''
      });
      return;
    }

    try {
      const response = await axios.post(`${API_BASE_URL}/auth/oneclick`, {
        username: formData.username
      });

      const { token, user } = response.data;
      
      localStorage.setItem('token', token);
      localStorage.setItem('user', JSON.stringify(user));
      
      setIsAuthenticated(true);
      setUserData(user);
      closeModal();
      toast.success('সফলভাবে এক ক্লিকে নিবন্ধন করা হয়েছে!');
    } catch (error) {
      toast.error(error.response?.data?.message || 'নিবন্ধন করতে সমস্যা হয়েছে');
    }
  };

  const handleLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    setIsAuthenticated(false);
    setUserData(null);
    setProfileDropdownOpen(false);
    toast.success('সফলভাবে লগআউট করা হয়েছে');
  };

  const menuItems = [
    { icon: <FaFire className="text-yellow-400" />, label: 'গরম খেলা', link: '/hot-games' },
    { icon: <FaUserFriends className="text-blue-400" />, label: 'বন্ধুর আমন্ত্রণ', link: '/invite-friends' },
    { icon: <FaGift2 className="text-purple-400" />, label: 'অফার', link: '/offers' },
    { icon: <FaChartBar className="text-green-400" />, label: 'চার্ট', link: '/charts' },
    { icon: <FaMedal className="text-yellow-500" />, label: 'পুরস্কার কেন্দ্র', link: '/rewards-center' },
    { icon: <FaFutbol className="text-red-400" />, label: 'লাইভ', link: '/live' },
    { icon: <FaMoneyBillWave className="text-emerald-400" />, label: 'ম্যানুয়াল রিচার্জ', link: '/manual-recharge' },
    { icon: <FaHandHoldingHeart className="text-pink-400" />, label: 'পয়েন্ট', link: '/points' },
    { icon: <FaGem className="text-cyan-400" />, label: 'ডায়মন্ড', link: '/diamonds' },
    { icon: <FaCrosshairs className="text-orange-400" />, label: 'ফাংশন', link: '/functions' },
    { icon: <FaBullseye className="text-red-500" />, label: 'মিশন', link: '/missions' },
    { icon: <FaHandsHelping className="text-blue-300" />, label: 'স্পোর্টস', link: '/sports' },
    { icon: <FaFlag className="text-green-500" />, label: 'বাংলা', link: '/language' },
    { icon: <FaGamepad className="text-purple-500" />, label: 'ই-স্পোর্টস', link: '/esports' },
    { icon: <FaDownload className="text-indigo-400" />, label: 'এপ্লিকেশন ডাউনলোড', link: '/download' },
    { icon: <FaThLarge className="text-gray-300" />, label: 'নভিগেশন', link: '/navigation' },
    { icon: <FaHeadset2 className="text-teal-400" />, label: 'গ্রাহক সেবা', link: '/customer-support' },
  ];

  const profileMenuItems = [
    { icon: <FaUser className="text-blue-400" />, label: 'প্রোফাইল', path: '/profile' },
    { icon: <FaWallet className="text-blue-400" />, label: 'ওয়ালেট', path: '/wallet' },
    { icon: <FaHistory className="text-blue-400" />, label: 'লেনদেনের ইতিহাস', path: '/transactions' },
    { icon: <FaUserCog className="text-blue-400" />, label: 'অ্যাকাউন্ট সেটিংস', path: '/settings' },
    { icon: <FaCog className="text-blue-400" />, label: 'সেটিংস', path: '/settings' },
    { icon: <FaSignOutAlt className="text-red-400" />, label: 'লগ আউট', path: '/logout', onClick: handleLogout }
  ];

  const navItems = [
    { id: 'home', icon: <FaHome className="text-xl" />, label: 'হোম', link: '/' },
    { id: 'promotions', icon: <FaGift className="text-xl" />, label: 'প্রোমো', link: '/promotions' },
    { id: 'deposit', icon: <FaMoneyBillAlt className="text-xl" />, label: 'ডিপোজিট', link: '/deposit' },
    { id: 'rewards', icon: <FaTrophy className="text-xl" />, label: 'রিওয়ার্ড', link: '/my-account' }
  ];

  return (
    <>
      <header className="bg-gray-900 sticky top-0 left-0 px-3 md:px-8 py-2 md:py-3 z-[10000] flex items-center justify-between shadow-lg border-b border-gray-700">
        <div className="flex items-center space-x-2">
          <button onClick={toggleSidebar} className="text-gray-300 hover:text-blue-400 transition-colors text-[22px] md:text-[27px]">
            <RiMenuFold2Line />
          </button>
        <img className='w-[150px]' src={logo} alt="" />
        </div>
        <Toaster position="top-right" toastOptions={{
          style: {
            background: '#1f2937',
            color: '#fff',
            border: '1px solid #374151'
          }
        }} />
        <div className="flex items-center space-x-1 md:space-x-4">
          <div className="hidden md:block relative">
            <button
              onClick={toggleDropdown}
              className="flex items-center bg-gray-800 hover:bg-gray-700 cursor-pointer text-gray-200 font-medium px-2 md:px-3 py-1 md:py-2 rounded-md shadow-sm text-sm md:text-base transition-colors border border-gray-700"
            >
              <img className='w-[18px] md:w-[20px] mr-1' src={language.flag} alt="" />
              <span className="hidden sm:inline">{language.name}</span>
              <MdArrowDropDown className={`ml-1 text-lg transform transition-transform ${showDropdown ? 'rotate-180' : ''}`} />
            </button>
            {showDropdown && (
              <div className="absolute right-0 mt-2 w-40 bg-gray-800 rounded-md shadow-lg z-50 border border-gray-700">
                {languages.map((lang) => (
                  <button
                    key={lang.code}
                    onClick={() => selectLanguage(lang)}
                    className={`flex items-center w-full text-left px-4 py-2 text-sm hover:bg-gray-700 ${
                      language.code === lang.code ? 'bg-gray-700 font-medium' : ''
                    }`}
                  >
                    <img className='w-[20px] mr-2' src={lang.flag} alt="" />
                    <span className="text-gray-200">{lang.name}</span>
                  </button>
                ))}
              </div>
            )}
          </div>
          
          <div className="flex items-center space-x-2 md:space-x-4">
            {!isAuthenticated ? (
              <>
                <button 
                  onClick={() => openAuthModal('login')}
                  className="bg-theme_color2 px-[20px] py-2 cursor-pointer rounded-[5px] text-gray-800"
                >
                  লগইন
                </button>
                <button 
                  onClick={() => openAuthModal('register')}
                  className="md:block hidden bg-[#3867d6] cursor-pointer px-[20px] py-2 rounded-[5px] text-white"
                >
                  নিবন্ধন
                </button>
              </>
            ) : (
              <>
                <div className="relative">
                  <button 
                    onClick={toggleProfileDropdown}
                    className="px-[15px] py-[8px] cursor-pointer border-[1px] border-gray-700 rounded-[5px] flex justify-center items-center gap-2"
                  >
                    <img
                      src={userData?.avatar || "https://images.5943920202.com//TCG_PROD_IMAGES/B2C/01_PROFILE/PROFILE/0.png"}
                      alt="Profile"
                      className="w-5 h-5 md:w-6 md:h-6 rounded-full border-2 border-blue-500"
                    />
                     <span className="text-white font-medium">{userData?.username || 'User'}</span>
                    <MdArrowDropDown className={`text-base md:text-lg ml-1 text-gray-300 transition-transform ${profileDropdownOpen ? 'rotate-180' : ''}`} />
                  </button>

                  {profileDropdownOpen && (
                    <div className="absolute right-0 mt-2 w-64 bg-gray-800 rounded-lg shadow-xl z-50 border border-gray-700 transform perspective-1000 origin-top">
                      <div className="relative bg-gray-800 rounded-lg overflow-hidden transform-style-preserve-3d transition-all duration-300 group-hover:rotate-x-10">
                        <div className="px-4 py-3 bg-gray-900 border-b border-gray-700 flex items-center">
                          <img
                            src={userData?.avatar || "https://images.5943920202.com//TCG_PROD_IMAGES/B2C/01_PROFILE/PROFILE/0.png"}
                            alt="Profile"
                            className="w-10 h-10 rounded-full border-2 border-blue-500 mr-3"
                          />
                          <div>
                            <p className="text-white font-medium">{userData?.username || 'User'}</p>
                            <p className="text-blue-400 text-sm">৳ {userData?.balance?.toFixed(2) || '0.00'}</p>
                          </div>
                        </div>
                        
                        <ul className="py-1">
                          {profileMenuItems.map((item, index) => (
                            <li key={index}>
                              <a
                                href={item.path}
                                onClick={(e) => {
                                  if (item.onClick) {
                                    e.preventDefault();
                                    item.onClick();
                                  }
                                }}
                                className="flex items-center px-4 py-3 text-gray-300 hover:bg-gray-700 transition-colors duration-200"
                              >
                                <span className="mr-3 text-lg">{item.icon}</span>
                                <span>{item.label}</span>
                              </a>
                            </li>
                          ))}
                        </ul>
                        
                        <div className="px-4 py-2 bg-gray-900 border-t border-gray-700 text-center">
                          <button className="text-xs text-blue-400 hover:underline">
                            অ্যাকাউন্ট সুরক্ষিত করুন
                          </button>
                        </div>
                      </div>
                    </div>
                  )}
                </div>

                <div className="flex items-center bg-gray-800 cursor-pointer px-[15px] py-[10px] border-[1px] border-gray-700 rounded-[5px] ">
                  <FaMoneyBillWave className="text-yellow-400 mr-1 text-xs md:text-sm" />
                  <span className="text-white text-xs md:text-sm font-semibold">৳ {userData?.balance?.toFixed(2) || '0.00'}</span>
                  <FaSyncAlt className="text-gray-400 ml-1 md:ml-2 text-xs md:text-sm cursor-pointer hover:text-blue-400 transition-colors" />
                </div>

                <button className="px-[15px] py-[8px] bg-theme_color2  text-gray-700 cursor-pointer rounded-[5px]">
                  ডিপোজিট
                </button>

                <button className="px-[15px] py-[8px] bg-[#3867d6] text-white cursor-pointer rounded-[5px]">
                  উত্তোলন
                </button>
              </>
            )}
          </div>
        </div>
      </header>

      {sidebarOpen && (
        <div 
          className="fixed inset-0 bg-[rgba(0,0,0,0.7)] z-[9999] md:hidden" 
          onClick={closeSidebar}
        />
      )}

      <div className={`fixed inset-0 z-[10000] transform transition-transform duration-300 ease-in-out ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'} md:hidden`}>
        <div className="bg-gray-900 h-full w-4/5 max-w-xs overflow-y-auto border-r border-gray-800">
          <div className="p-4 flex items-center justify-between border-b border-gray-800">
            <h2 className="text-white text-xl font-bold">Menu</h2>
            <button 
              onClick={closeSidebar}
              className="text-gray-400 hover:text-white transition-colors"
            >
              <FaTimes />
            </button>
          </div>
          
          <div className="grid grid-cols-2 gap-3 p-4">
            {menuItems.map((item, index) => (
              <a
                key={index}
                href={item.link}
                className="bg-gray-800 hover:bg-gray-700 transition-all duration-300 text-white rounded-lg py-4 flex flex-col items-center justify-center cursor-pointer 
                shadow-[0_4px_0_#1f2937]
                hover:shadow-[0_4px_0_#1f2937,inset_0_2px_8px_rgba(255,255,255,0.1)]
                active:shadow-[0_1px_0_#1f2937]
                active:translate-y-1 border border-gray-700"
                onClick={closeSidebar}
              >
                <div className="text-xl mb-1">
                  {item.icon}
                </div>
                <div className="text-xs text-center leading-tight font-medium text-gray-300">
                  {item.label}
                </div>
              </a>
            ))}
          </div>
        </div>
      </div>

      <div className="fixed right-4 bottom-24 md:bottom-6 z-[9998] flex flex-col space-y-3">
        <a href="#" className="relative group">
          <div className="bg-[#0088cc] hover:bg-[#00a2e6] text-white p-3 rounded-full shadow-[0_4px_0_#006699] hover:shadow-[0_6px_0_#006699] active:shadow-[0_2px_0_#006699] active:translate-y-[2px] transition-all duration-150 flex items-center justify-center w-12 h-12">
            <FaTelegram className="text-xl" />
          </div>
          <span className="absolute right-full top-1/2 transform -translate-y-1/2 mr-2 bg-gray-800 text-white text-xs font-medium px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap border border-gray-700">
            Telegram
          </span>
        </a>

        <a href="#" className="relative group">
          <div className="bg-[#3b5998] hover:bg-[#4c70ba] text-white p-3 rounded-full shadow-[0_4px_0_#2d4373] hover:shadow-[0_6px_0_#2d4373] active:shadow-[0_2px_0_#2d4373] active:translate-y-[2px] transition-all duration-150 flex items-center justify-center w-12 h-12">
            <FaFacebookF className="text-xl" />
          </div>
          <span className="absolute right-full top-1/2 transform -translate-y-1/2 mr-2 bg-gray-800 text-white text-xs font-medium px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap border border-gray-700">
            Facebook
          </span>
        </a>

        <a href="#" className="relative group">
          <div className="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white p-3 rounded-full shadow-[0_4px_0_#4c1d95] hover:shadow-[0_6px_0_#4c1d95] active:shadow-[0_2px_0_#4c1d95] active:translate-y-[2px] transition-all duration-150 flex items-center justify-center w-12 h-12">
            <FaHeadset className="text-xl" />
          </div>
          <span className="absolute right-full top-1/2 transform -translate-y-1/2 mr-2 bg-gray-800 text-white text-xs font-medium px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap border border-gray-700">
            Support
          </span>
        </a>
      </div>

      <div className="md:hidden fixed bottom-0 left-0 right-0 bg-gray-900 border-t-2 border-blue-500 z-[9999] shadow-[0_-4px_10px_rgba(0,0,0,0.3)]">
        <div className="flex justify-around relative">
          <div 
            className={`absolute bottom-0 h-full bg-gradient-to-r from-blue-600 to-purple-600 transition-all duration-300 ease-out rounded-t-lg border-t-2 border-blue-400`}
            style={{
              width: `${100 / navItems.length}%`,
              left: `${navItems.findIndex(item => item.id === activeNav) * (100 / navItems.length)}%`
            }}
          ></div>
          
          {navItems.map((item) => (
            <a
              key={item.id}
              href={item.link}
              onClick={() => setActiveNav(item.id)}
              className={`flex flex-col items-center justify-center py-3 px-2 w-full relative z-10 ${
                activeNav === item.id ? 'text-white' : 'text-gray-400'
              }`}
            >
              <div className={`text-xl mb-1 transition-all duration-200 ${
                activeNav === item.id ? 'scale-110' : 'scale-100'
              }`}>
                {item.icon}
              </div>
              <span className="text-xs font-medium">{item.label}</span>
            </a>
          ))}
        </div>
      </div>

      {showAuthModal && (
        <div className="fixed inset-0 z-[10001] flex items-center justify-center bg-[rgba(0,0,0,0.8)] p-4">
          <div className="bg-gray-800 w-full max-w-lg rounded-[5px] shadow-2xl overflow-hidden border border-gray-700">
            <div className="bg- px-6 py-4 flex justify-between items-center">
              <h2 className="text-white text-xl font-bold">
                {activeTab === 'login' && 'লগইন করুন'}
                {activeTab === 'register' && 'নিবন্ধন করুন'}
                {activeTab === 'oneclick' && 'এক ক্লিকে নিবন্ধন'}
              </h2>
              <button 
                onClick={closeModal}
                className="text-white hover:text-gray-300 transition-colors"
              >
                <FaTimesCircle className="text-xl" />
              </button>
            </div>

            <div className="flex border-b border-gray-700">
              <button
                onClick={() => setActiveTab('login')}
                className={`flex-1 py-3 text-sm md:text-base font-medium cursor-pointer ${
                  activeTab === 'login' ? 'text-theme_color2 border-b-2 border-theme_color2' : 'text-gray-400'
                }`}
              >
                লগইন
              </button>
              <button
                onClick={() => setActiveTab('register')}
                className={`flex-1 py-3 text-sm md:text-base font-medium cursor-pointer ${
                  activeTab === 'register' ? 'text-theme_color2 border-b-2 border-theme_color2' : 'text-gray-400'
                }`}
              >
                নিবন্ধন
              </button>
              <button
                onClick={() => setActiveTab('oneclick')}
                className={`flex-1 py-3 text-sm md:text-base font-medium cursor-pointer ${
                  activeTab === 'oneclick' ? 'text-theme_color2 border-b-2 border-theme_color2' : 'text-gray-400'
                }`}
              >
                এক ক্লিকে
              </button>
            </div>

            <div className="p-6">
              {activeTab === 'login' && (
                <div className="space-y-4">
                  <div className="relative">
                    <FaUser className="absolute left-3 top-3 text-theme_color2 text-sm md:text-base" />
                    <input
                      type="text"
                      name="username"
                      value={formData.username}
                      onChange={handleInputChange}
                      placeholder="ব্যবহারকারীর নাম"
                      className={`w-full bg-gray-700 text-white border ${errors.username ? 'border-red-500' : 'border-gray-600'} py-2 pl-10 pr-3 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm md:text-base placeholder-gray-400`}
                    />
                    {errors.username && (
                      <p className="text-red-400 text-xs mt-1">{errors.username}</p>
                    )}
                  </div>

                  <div className="relative">
                    <FaLock className="absolute left-3 top-3 text-theme_color2 text-sm md:text-base" />
                    <input
                      type={passwordVisible ? "text" : "password"}
                      name="password"
                      value={formData.password}
                      onChange={handleInputChange}
                      placeholder="পাসওয়ার্ড"
                      className={`w-full bg-gray-700 text-white border ${errors.password ? 'border-red-500' : 'border-gray-600'} py-2 pl-10 pr-10 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm md:text-base placeholder-gray-400`}
                    />
                    <button
                      onClick={() => setPasswordVisible(!passwordVisible)}
                      className="absolute right-3 top-3 text-theme_color2 cursor-pointer"
                    >
                      {passwordVisible ? <FaEyeSlash /> : <FaEye />}
                    </button>
                    {errors.password && (
                      <p className="text-red-400 text-xs mt-1">{errors.password}</p>
                    )}
                  </div>

                  <div className="flex justify-between items-center text-sm text-theme_color2">
                    <div className="flex items-center">
                      <input type="checkbox" id="remember" className="mr-2 accent-blue-500" />
                      <label htmlFor="remember">মনে রাখুন</label>
                    </div>
                    <a href="#" className="text-theme_color2 hover:underline">পাসওয়ার্ড ভুলে গেছেন?</a>
                  </div>

                  <button 
                    onClick={handleLogin}
                    className="w-full bg-theme_color2 hover:bg-theme_color2/90 px-[20px] py-[10px] rounded-[5px] "
                  >
                    লগইন করুন
                  </button>
                </div>
              )}

              {activeTab === 'register' && (
                <div className="space-y-4">
                  <div className="relative">
                    <FaUser className="absolute left-3 top-3 text-theme_color2 text-sm md:text-base" />
                    <input
                      type="text"
                      name="username"
                      value={formData.username}
                      onChange={handleInputChange}
                      placeholder="ব্যবহারকারীর নাম"
                      className={`w-full bg-gray-700 text-white border ${errors.username ? 'border-red-500' : 'border-gray-600'} py-2 pl-10 pr-3 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm md:text-base placeholder-gray-400`}
                    />
                    {errors.username && (
                      <p className="text-red-400 text-xs mt-1">{errors.username}</p>
                    )}
                  </div>

                  <div className="relative">
                    <FaLock className="absolute left-3 top-3 text-theme_color2 text-sm md:text-base" />
                    <input
                      type={passwordVisible ? "text" : "password"}
                      name="password"
                      value={formData.password}
                      onChange={handleInputChange}
                      placeholder="পাসওয়ার্ড"
                      className={`w-full bg-gray-700 text-white border ${errors.password ? 'border-red-500' : 'border-gray-600'} py-2 pl-10 pr-10 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm md:text-base placeholder-gray-400`}
                    />
                    <button
                      onClick={() => setPasswordVisible(!passwordVisible)}
                      className="absolute right-3 top-3 text-theme_color2 cursor-pointer"
                    >
                      {passwordVisible ? <FaEyeSlash /> : <FaEye />}
                    </button>
                    {errors.password && (
                      <p className="text-red-400 text-xs mt-1">{errors.password}</p>
                    )}
                  </div>

                  <div className="relative">
                    <FaLock className="absolute left-3 top-3 text-theme_color2 text-sm md:text-base" />
                    <input
                      type={confirmPasswordVisible ? "text" : "password"}
                      name="confirmPassword"
                      value={formData.confirmPassword}
                      onChange={handleInputChange}
                      placeholder="পাসওয়ার্ড নিশ্চিত করুন"
                      className={`w-full bg-gray-700 text-white border ${errors.confirmPassword ? 'border-red-500' : 'border-gray-600'} py-2 pl-10 pr-10 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm md:text-base placeholder-gray-400`}
                    />
                    <button
                      onClick={() => setConfirmPasswordVisible(!confirmPasswordVisible)}
                      className="absolute right-3 top-3 text-theme_color2 cursor-pointer"
                    >
                      {confirmPasswordVisible ? <FaEyeSlash /> : <FaEye />}
                    </button>
                    {errors.confirmPassword && (
                      <p className="text-red-400 text-xs mt-1">{errors.confirmPassword}</p>
                    )}
                  </div>

                  <div className="flex items-start text-xs md:text-sm space-x-2 text-blue-400">
                    <input type="checkbox" className="mt-1 accent-theme_color2" required />
                    <p>আমি ১৮ বছর পূর্ণ এবং গ্রহণ করতে সম্মত <a className="text-blue-300 hover:underline" href="#">ব্যবহারের শর্ত</a></p>
                  </div>

                  <button 
                    onClick={handleRegister}
                    className="w-full bg-theme_color2 hover:bg-theme_color2/90 px-[20px] py-[10px] rounded-[5px] "
                  >
                    নিবন্ধন করুন
                  </button>

                  <div className="text-center text-xs md:text-sm text-theme_color2">
                    ইতিমধ্যে অ্যাকাউন্ট আছে?{' '}
                    <button 
                      onClick={() => setActiveTab('login')} 
                      className="text-theme_color2 font-medium hover:underline"
                    >
                      লগইন করুন
                    </button>
                  </div>
                </div>
              )}

              {activeTab === 'oneclick' && (
                <div className="space-y-4">
                  <div className="relative">
                    <FaUser className="absolute left-3 top-3 text-theme_color2 text-sm md:text-base" />
                    <input
                      type="text"
                      name="username"
                      value={formData.username}
                      onChange={handleInputChange}
                      placeholder="ব্যবহারকারীর নাম"
                      className={`w-full bg-gray-700 text-white border ${errors.username ? 'border-red-500' : 'border-gray-600'} py-2 pl-10 pr-3 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm md:text-base placeholder-gray-400`}
                    />
                    {errors.username && (
                      <p className="text-red-400 text-xs mt-1">{errors.username}</p>
                    )}
                  </div>

                  <div className="flex items-start text-xs md:text-sm text-theme_color2 space-x-2">
                    <input type="checkbox" className="mt-1 accent-theme_color2" required />
                    <p>আমি ১৮ বছর পূর্ণ এবং গ্রহণ করতে সম্মত <a className="text-blue-300 hover:underline" href="#">ব্যবহারের শর্ত</a></p>
                  </div>

                  <button 
                    onClick={handleOneClickRegister}
                    className="w-full bg-theme_color2 hover:bg-theme_color2/90 px-[20px] py-[10px] rounded-[5px] "
                  >
                    এক ক্লিকে নিবন্ধন
                  </button>

                  <div className="text-center text-xs md:text-sm text-theme_color2">
                    বিস্তারিত নিবন্ধন চান?{' '}
                    <button 
                      onClick={() => setActiveTab('register')} 
                      className="text-blue-300 font-medium hover:underline"
                    >
                      নিবন্ধন ফর্মে যান
                    </button>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default Header;